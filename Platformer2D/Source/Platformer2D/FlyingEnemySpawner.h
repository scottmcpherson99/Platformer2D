// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "EnemyBase.h"
#include "FlyingEnemySpawner.generated.h"

/**
 * 
 */
UCLASS()
class PLATFORMER2D_API AFlyingEnemySpawner : public AEnemyBase
{
	GENERATED_BODY()
	
public:
	AFlyingEnemySpawner();
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	// <Enemy to spawn>
	UPROPERTY(EditAnywhere, Category = "Type of enemy to spawn")
		TSubclassOf<class ADumbEnemy> enemyToSpawn;
	// </Enemy to spawn>
	///////////////////////////////////////////////////////////////////////////////////////////////////////////

protected:
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	// <AFlyingEnemySpawner>
	virtual void BeginPlay() override;

	// Called every frame
	virtual void Tick(float DeltaTime) override;
	// </AFlyingEnemySpawner>
	///////////////////////////////////////////////////////////////////////////////////////////////////////////

	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	// <Movement>
	//timeline actor
	UPROPERTY(EditAnywhere, Category = "Timeline")
		UCurveFloat* BezierCurveFloat;

	FTimeline BezierCurveTimeline;

	UFUNCTION()
		void BezierTimelineProgress(float value);

	//perform tasks based on state
	void FindControlPoints();
	// </Movement>
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	

	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	// <SpawnEnemy>
	//spawn an enemy
	void SpawnEnemy();

	//timer to spawn each enemy
	FTimerHandle destroyTimer;
	// </SpawnEnemy>
	///////////////////////////////////////////////////////////////////////////////////////////////////////////


private:
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	// <Attributes>
	FVector ControlPoints[3];
	// </Attributes>
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
};